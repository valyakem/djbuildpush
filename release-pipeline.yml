trigger: none
pr: none

resources:
- repo: self


variables:
  defaultpath: '$(Build.SourcesDirectory)/azureacraksintegration/18-Azure-Container-Registry-ACR/18-01-ACR-attach-to-AKS/'
  agent-pool-name: 'nbakspools'

jobs:
- deployment:
  displayName: Deploy to GKE
  pool:
    name: $(agent-pool-name) 
  environment: contoso.gkenamespace
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
        - task: ManualValidation@0
          displayName: 'Manual Validation'
          inputs:
            notifyUsers: |
            valentine.akem@hq.nextgbits.com
            instructions: 'Please Approve this job for us to continue'
          retryCountOnTaskFailure: 1
        - task: ManualIntervention@8
          displayName: 'Pause deployment until approved'
          inputs:
            instructions: 'This deployment is paused waiting for your approvals'
            emailRecipients: '["fef505e6-ade1-68a0-a04d-3abe34ae9bb0"]'
          retryCountOnTaskFailure: 1
        - task: KubernetesManifest@0
          displayName: Deploy to Kubernetes cluster
          inputs:
            action: deploy
            kubernetesServiceConnection: serviceConnection #replace with your service connection
            namespace: gkenamespace
            manifests: $(defaultpath)/manifests/*
# - deployment:
#   displayName: Deploy to EKS
#   pool:
#     vmImage: ubuntu-latest
#   environment: contoso.eksnamespace
#   strategy:
#     runOnce:
#       deploy:
#         steps:
#         - checkout: self
#         - task: KubernetesManifest@0
#           displayName: Deploy to Kubernetes cluster
#           inputs:
#             action: deploy
#             kubernetesServiceConnection: serviceConnection #replace with your service connection
#             namespace: eksnamespace
#             manifests: manifests/*
# - deployment:
#   displayName: Deploy to OpenShift
#   pool:
#     vmImage: ubuntu-latest
#   environment: contoso.openshiftnamespace
#   strategy:
#     runOnce:
#       deploy:
#         steps:
#         - checkout: self
#         - task: KubernetesManifest@0
#           displayName: Deploy to Kubernetes cluster
#           inputs:
#             action: deploy
#             kubernetesServiceConnection: serviceConnection #replace with your service connection
#             namespace: openshiftnamespace
#             manifests: manifests/*
# - deployment:
#   displayName: Deploy to DigitalOcean
#   pool:
#     vmImage: ubuntu-latest
#   environment: contoso.digitaloceannamespace
#   strategy:
#     runOnce:
#       deploy:
#         steps:
#         - checkout: self
#         - task: KubernetesManifest@0
#           displayName: Deploy to Kubernetes cluster
#           inputs:
#             action: deploy
#             kubernetesServiceConnection: serviceConnection #replace with your service connection
#             namespace: digitaloceannamespace
#             manifests: manifests/*























# # Docker
# # Build and push an image to Azure Container Registry
# # https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger: none
# pr: none

# resources:
# - repo: self

# variables:
#   # Container registry service connection established during pipeline creation
#   dockerRegistryServiceConnection: '3fabab71-6343-41f5-b435-c8546b76f35a'
#   imageRepository: 'nbapp1/app1nginx'
#   containerRegistry: 'nbacr01.azurecr.io'
#   dockerfilePath: '$(Build.SourcesDirectory)/azureacraksintegration/18-Azure-Container-Registry-ACR/18-01-ACR-attach-to-AKS/docker-manifests/Dockerfile'
#   agent-pool-name: 'nbakspools'
#   tagNumber: '1.0'

#   # Agent VM image name
# pool:
#   name: $(agent-pool-name) 

# stages:
# - stage: Build
#   displayName: Build and push stage
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       name: $(agent-pool-name)
#     steps:
#     - task: ManualValidation@0
#       displayName: 'Manual Validation'
#       inputs:
#         notifyUsers: |
#         valentine.akem@hq.nextgbits.com
#         instructions: 'Please Approve this job for us to continue'
#       retryCountOnTaskFailure: 1
#     - task: ManualIntervention@8
#       displayName: 'Pause deployment until approved'
#       inputs:
#         instructions: 'This deployment is paused waiting for your approvals'
#         emailRecipients: '["fef505e6-ade1-68a0-a04d-3abe34ae9bb0"]'
#       retryCountOnTaskFailure: 1
#     - task: Docker@2
#       displayName: Build and push an image to container registr
#       inputs:
#         command: buildAndPush
#         scriptType: 'bash'
#         scriptLocation: 'inlineScript'
#         inlineScript: |
#           acrServer="login nbacr01.azurecr.io"
#           acrName="nbacr01"
#           TOKEN=$(az acr login --name $acrName --expose-token --output tsv --query accessToken)
#           docker login $acrServer --username 00000000-0000-0000-0000-000000000000 --password-stdin <<< $TOKEN
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tagNumber)    
